java如何实现多继承
Java是一种面向对象的只允许单继承的语言，这是每个Java程序员从业者都知道定理。那么可不可以通过一些手段实现多继承呢？答案是可以！

实现多继承有三个方法：
多层继承
内部类
接口

多层继承
如果要直接继承类，子类是不可以直接多继承的，但是可以通过多层继承来实现多继承，但多层继承一般不建议超过三次。
a extends b ,c extends 此时c继承了a和b

内部类
成员内部类实现多继承
class a{}, class b{},
class c{class oneA extends a{} class oneB extends b{}} c中含有了a和b的方法

接口
在同时可用内部类和接口时，优先使用接口，因内部类需要应用于继承关系，而接口可用于继承也可用于其它，比较灵活。定义类实现接口，需要实现其所有父接口的方法！
interface a ;interface b; interface c extends b,a; class cc implements c;此时c需要实现a,b,c中所有的方法

总结
三个实现java多继承的方法：多层继承、内部类、接口
多层继承：一般不建议超过三层，孙子类会获得父类的所有非私有方法和属性。（B继承A，C继承B，C就间接性的的继承A和B）
成员内部类：直接在类的内部定义成员类，使之成为该类的一部分，达到高内聚的效果。
接口：java中可以继承多个接口，实现该接口的实现类需要实现该接口及父接口的所有方法。(IC继承IB,IC impl实现IC 就相当于继承了它们)